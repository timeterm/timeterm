openapi: 3.0.3
info:
  title: Timeterm
  version: "1.0"
  contact:
    name: Timeterm
    email: support@timeterm.nl
  description: The Timeterm API

security:
  - ApiKeyAuth: []

servers:
  - url: "https://api.timeterm.nl/"

paths:
  /user/me:
    get:
      operationId: getCurrentUser
      summary: Get the current user
      responses:
        "200":
          description: A User object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /device/registrationconfig:
    get:
      operationId: getDeviceRegistrationConfig
      summary: Get the device registration configuration
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                required:
                  - token
                  - networkingConfig
                properties:
                  token:
                    type: string
                  networkingConfig:
                    required:
                      - services
                    properties:
                      services:
                        type: array
                        items:
                          $ref: "#/components/schemas/NetworkingService"

  /device:
    post:
      operationId: registerDevice
      summary: Register a new device
      description: |
        Register a new device

        > NOTE: this API call can only be performed by devices.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        "200":
          description: Device created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeviceResponse"
        default:
          $ref: "#/components/responses/ProblemResponse"
    get:
      operationId: getDevices
      summary: List devices
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: uint64
        - name: maxAmount
          in: query
          schema:
            type: integer
            format: uint64
        - name: searchName
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedDevices"
    delete:
      operationId: deleteDevices
      summary: Delete devices
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deviceIds:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        "204":
          description: No content

  /device/restart:
    post:
      operationId: rebootDevices
      summary: Reboot a list of devices
      requestBody:
        content:
          application/json:
            schema:
              properties:
                deviceIds:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        "200":
          description: No content

  /device/{id}:
    get:
      operationId: getDevice
      summary: Get a device
      responses:
        "200":
          description: Device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
    patch:
      operationId: updateDevice
      summary: Update a device
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
    delete:
      operationId: deleteDevice
      summary: Delete a device
      responses:
        "204":
          description: No content

  /device/{id}/config/natscreds:
    get:
      operationId: getDeviceNatsCredentials
      summary: Get NATS credentials for a device
      responses:
        "200":
          description: NATS credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NatsCredentials"

  /device/{id}/reboot:
    post:
      operationId: rebootDevice
      summary: Reboot a device
      responses:
        "200":
          description: OK

  /device/{id}/heartbeat:
    post:
      operationId: updateDeviceHeartbeat
      summary: Update the last heartbeat of the device
      description: |
        Update the last heartbeat of the device.  
        Can only be used by the device itself.
      responses:
        "204":
          description: No content

  /zermelo/appointment:
    get:
      operationId: getZermeloAppointments
      summary: Get a list of (Zermelo) appointments
      parameters:
        - name: X-Card-Uid
          in: header
          required: true
          schema:
            type: string
        - name: startTime
          in: header
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: header
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: A list of appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointments"
        default:
          $ref: "#/components/responses/ProblemResponse"

  /student/self:
    get:
      operationId: getStudentSelf
      summary: Get information about the current student
      parameters:
        - name: X-Card-Uid
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Student information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        default:
          $ref: "#/components/responses/ProblemResponse"

  /organization/{organizationId}:
    get:
      operationId: getOrganization
      summary: Get an organization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    patch:
      operationId: updateOrganization
      summary: Update an organization
      description: Update an organization. Request body is interpreted as JSON Merge Patch [[RFC 7396](https://tools.ietf.org/html/rfc7396)].
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
  
  /networking/service:
    get:
      operationId: getNetworkingServices
      summary: Get networking services
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: uint64
        - name: maxAmount
          in: query
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedNetworkingServices"

  /networking/service/{serviceId}:
    get:
      operationId: getNetworkingService
      summary: Get a networking service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkingService"

    delete:
      operationId: deleteNetworkingService
      summary: Delete a networking service
      responses:
        "204":
          description: No content
    
    put:
      operationId: replaceNetworkingService
      summary: Replace a networking service
      responses:
        "200":
          description: Networking service updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkingService"

  /student:
    post:
      operationId: createStudent
      summary: Create a student
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cardUid:
                  type: string
                  description: Card UID, hexadecimal
                  example: A8AB80A3
                zermelo:
                  properties:
                    user:
                      type: string
                      description: Zermelo user
                      example: "15029"
      responses:
        "200":
          description: Student created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        default:
          $ref: "#/components/responses/ProblemResponse"
    get:
      operationId: getStudents
      summary: List students
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: uint64
        - name: maxAmount
          in: query
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedStudents"
    delete:
      operationId: deleteStudents
      summary: Delete students
      requestBody:
        content:
          application/json:
            schema:
              properties:
                studentIds:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        "204":
          description: No content

  /student/{id}:
    get:
      operationId: getStudent
      summary: Get a student
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
    patch:
      operationId: updateStudent
      summary: Update a student
      description: Update an student. Request body is interpreted as JSON Merge Patch [[RFC 7396](https://tools.ietf.org/html/rfc7396)].
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: Student updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"

  /zermelo/connect:
    post:
      operationId: connectZermelo
      summary: Connect organization to Zermelo
      description: |
        Connect the requesting user's organization to Zermelo.
        The integration will create a new token for itself and destroy the provided token.
        Tokens are automatically refreshed.
        The institution used is that of the organization.

        > Note: if the organization's Zermelo institution is updated, the integration may very well break.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: 9902snvkzlxdf0923hkzxhv980
      responses:
        "200":
          description: Connected
components:
  schemas:
    User:
      properties:
        id:
          type: string
          format: uuid
        organizationId:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string

    Appointments:
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"
        links:
          type: object
          properties:
            choices:
              type: string

    Appointment:
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the appointment.
          example: 980803080
        appointmentInstance:
          type: integer
          format: int64
          description: The instance of the appointment.
          example: 129304801
        isOnline:
          type: boolean
          description: Whether or not the lesson is online.
          example: true
        isOptional:
          type: boolean
          description: Whether or not following the lesson is required.
          example: false
        isStudentEnrolled:
          type: boolean
          description: Whether or not the student is enrolled.
          example: false
        isCanceled:
          type: boolean
          description: Whether or not the appointment is canceled.
          example: false
        startTimeSlotName:
          type: string
          description: The slot in which this appointment starts.
          example: "3"
        endTimeSlotName:
          type: string
          description: The slot in which this appointment ends.
          example: "4"
        subjects:
          type: array
          description: The subjects taught in the appointment.
          items:
            type: string
            example: ltc
        locations:
          type: array
          description: The locations where the appointment is at.
          items:
            type: string
            example: g026
        teachers:
          type: array
          description: The teachers present in the appointment.
          items:
            type: string
        availableSpace:
          type: integer
          description: How many places are still open.
        startTime:
          type: string
          format: date-time
          description: The time at which the appointment starts.
        endTime:
          type: string
          format: date-time
          description: The time at which the appointment ends.
        isAttendancePlanned:
          type: boolean
        content:
          type: string
          description: The contents of the lesson
        isAttendanceOverruled:
          type: boolean
        alternatives:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"

    Student:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the student
        organizationId:
          type: string
          format: uuid
          description: The ID of the organization that the user is in.
        zermelo:
          properties:
            user:
              type: string
              description: The Zermelo user for the student.
              example: "15029"

    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID for the organization.
        name:
          type: string
          description: The name of the organization.
          example: "Example School"
        zermelo:
          properties:
            institution:
              type: string
              description: The Zermelo institution (used in the portal URL).
              example: "pws-timeterm"

    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        organizationId:
          type: string
          format: uuid
        primaryStatus:
          $ref: "#/components/schemas/PrimaryDeviceStatus"
        secondaryStatus:
          $ref: "#/components/schemas/SecondaryDeviceStatus"

    PrimaryDeviceStatus:
      type: string
      enum:
        - Online
        - Offline

    SecondaryDeviceStatus:
      type: string
      enum:
        - NotActivated

    DeviceAuth:
      properties:
        token:
          type: string
        links:
          properties:
            self:
              type: string

    Pagination:
      properties:
        offset:
          type: integer
          format: uint64
        maxAmount:
          type: integer
          format: uint64
        total:
          type: integer
          format: uint64

    PaginatedDevices:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Device"

    PaginatedStudents:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Student"
    
    PaginatedNetworkingServices:
      allOf:
        - $ref: "#/components/schemas/Pagination"
        - properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/NetworkingService"

    Problem:
      description: An RFC7807 Problem Details Object.
      properties:
        type:
          description: A URI reference [[RFC 3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. If empty, assumed to be "about:blank".
          type: string
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          description: The HTTP status code ([[RFC 7231](https://tools.ietf.org/html/rfc7231#section-6)], Section 6) generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.

    CreateDeviceResponse:
      properties:
        device:
          $ref: "#/components/schemas/Device"
        token:
          type: string

    NetworkingService:
      required:
        - type
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - Ethernet
            - Wifi
        ipv4Config:
          properties:
            type:
              type: string
              enum:
                - "Off"
                - Dhcp
                - Custom
            settings:
              properties:
                network:
                  type: string
                netmask:
                  type: string
                gateway:
                  type: string
        ipv6Config:
          properties:
            type:
              type: string
              enum:
                - "Off"
                - Auto
                - Custom
            settings:
              properties:
                network:
                  type: string
                prefixLength:
                  type: integer
                gateway:
                  type: string
        ipv6Privacy:
          type: string
          enum:
          - Disabled
          - Enabled
          - Preferred
        mac:
          type: string
        nameservers:
          type: array
          items:
            type: string
        searchDomains:
          type: array
          items:
            type: string
        timeservers:
          type: array
          items:
            type: string
        domain:
          type: string
        networkName:
          type: string
        ssid:
          type: string
        passphrase:
          type: string
        security:
          type: string
          enum:
          - Psk
          - Ieee8021x
          - None
          - Wep
        isHidden:
          type: boolean
        eap:
          type: string
          enum:
          - Tls
          - Ttls
          - Peap
        caCert:
          type: string
          format: byte
        caCertType:
          type: string
          enum: 
          - Pem
          - Der
        privateKey:
          type: string
          format: byte
        privateKeyType:
          type: string
          enum:
          - Pem
          - Der
          - Pfx
        privateKeyPassphrase:
          type: string
        privateKeyPassphraseType:
          type: string
          enum:
          - Fsid
        identity:
          type: string
        anonymousIdentity:
          type: string
        subjectMatch:
          type: string
        altSubjectMatch:
          type: string
        domainSuffixMatch:
          type: string
        domainMatch:
          type: string
        isPhase2EapBased:
          type: boolean
    
    NatsCredentials:
      properties:
        credentials:
          type: string

  responses:
    ProblemResponse:
      description: An RFC 7807 Problem Details Object response.
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/Problem"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
