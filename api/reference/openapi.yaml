openapi: 3.0.3
info:
  title: Timeterm
  version: '1.0'
  contact:
    name: Timeterm
    email: support@timeterm.nl
  description: The Timeterm API

security:
  - ApiKeyAuth: []

servers:
  - url: 'http://localhost:3000'

paths:
  /zermelo/appointment:
    get:
      operationId: getAppointments
      summary: Get a list of appointments
      parameters:
        - name: X-Card-Uid
          in: header
          required: true
          schema:
            type: string
        - name: startTime
          in: header
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: header
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A list of appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointments"
        default:
          $ref:  "#/components/responses/ProblemResponse"
  
  /user/self:
    get:
      operationId: getUserSelf
      summary: Get information about the current user
      parameters:
        - name: X-Card-Uid
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          $ref:  "#/components/responses/ProblemResponse"

  /organization/{organizationId}/user:
    post:
      operationId: createUserInOrganization
      summary: Create a user in an organization
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          $ref:  "#/components/responses/ProblemResponse"

  /organization/{organizationId}/device:
    post:
      operationId: createDeviceInOrganization
      summary: Create a new device in an organization
      responses:
        '200':
          description: Device created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceAuth"
        default:
          $ref:  "#/components/responses/ProblemResponse"

  /device/{id}:
    get:
      operationId: getDevice
      summary: Get a device
      responses:
        '200':
          description: Device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        default:
          $ref:  "#/components/responses/ProblemResponse"

components:
  schemas:
    Appointments:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"
        links:
          type: object
          properties:
            choices:
              type: string

    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        appointmentInstance:
          type: integer
          format: int64
        isOnline:
          type: boolean
        isOptional:
          type: boolean
        isStudentEnrolled:
          type: boolean
        isCanceled:
          type: boolean
        startTimeSlot:
          type: integer
        endTimeSlot:
          type: integer
        subjects:
          type: array
          items:
            type: string
        locations:
          type: array
          items:
            type: string
        teachers:
          type: array
          items:
            type: string
        capacity:
          type: integer
        availableSpace:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        
    # Note: primary key for a user should absolutely not be the card UID!
    # Rather, it should be a combination of the card UID and the organization ID.
    User:
      type: object
      properties:
        cardUid:
          type: string
          format: byte
        organizationId:
          type: string
          format: uuid
        name:
          type: string
        studentCode:
          type: string

    Device:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        location:
          type: string
        organizationId:
          type: string

    DeviceAuth:
      type: object
      properties:
        token:
          type: string
        links:
          type: object
          properties:
            self:
              type: string

    Problem:
      type: object
      description: A RFC7807 Problem Details Object.
      properties:
        type:
          description: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. If empty, assumed to be "about:blank".
          type: string
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          description: The HTTP status code ([[RFC7231](https://tools.ietf.org/html/rfc7231#section-6)], Section 6) generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.

  responses:
    ProblemResponse:
      description: A RFC7807 Problem Details Object response.
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/Problem"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key