openapi: 3.0.3
info:
  title: Timeterm
  version: '1.0'
  contact:
    name: Timeterm
    email: support@timeterm.nl
  description: The Timeterm API

security:
  - ApiKeyAuth: []

servers:
  - url: 'https://api.timeterm.nl/v1/'

paths:
  /zermelo/appointment:
    get:
      operationId: getAppointments
      summary: Get a list of appointments
      parameters:
        - name: X-Card-Uid
          in: header
          required: true
          schema:
            type: string
        - name: startTime
          in: header
          required: true
          schema:
            type: string
            format: date-time
        - name: endTime
          in: header
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A list of appointments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointments"
        default:
          $ref:  "#/components/responses/ProblemResponse"
  
  /student/self:
    get:
      operationId: getStudentSelf
      summary: Get information about the current student
      parameters:
        - name: X-Card-Uid
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Student information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        default:
          $ref:  "#/components/responses/ProblemResponse"

  /organization/{organizationId}:
    get:
      operationId: getOrganization
      summary: Get an organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
    patch:
      operationId: updateOrganization
      summary: Update an organization
      description: Update an organization. Request body is interpreted as JSON Merge Patch [[RFC 7396](https://tools.ietf.org/html/rfc7396)].
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        '200':
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"

  /student:
    post:
      operationId: createStudent
      summary: Create a student
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cardUid:
                  type: string
                  description: Card UID, hexadecimal
                  example: A8AB80A3
                zermelo:
                  properties:
                    user:
                      type: string
                      description: Zermelo user
                      example: "15029"
      responses:
        '200':
          description: Student created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        default:
          $ref:  "#/components/responses/ProblemResponse"

  /zermelo/connect:
    post:
      operationId: connectZermelo
      summary: Connect organization to Zermelo
      description: |
        Connect the requesting user's organization to Zermelo.
        The integration will create a new token for itself and destroy the provided token.
        Tokens are automatically refreshed.
        The institution used is that of the organization.
        > Note: if the organization's Zermelo institution is updated, the integration may very well break.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: 9902snvkzlxdf0923hkzxhv980
      responses:
        '200':
          description: Connected

  /device:
    post:
      operationId: createDevice
      summary: Create a new device
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
      responses:
        '200':
          description: Device created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceAuth"
        default:
          $ref:  "#/components/responses/ProblemResponse"
    get:
      operationId: listDevices
      summary: List the devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceList"
        default:
          $ref: "#/components/responses/ProblemResponse"

  /device/{id}:
    get:
      operationId: getDevice
      summary: Get a device
      responses:
        '200':
          description: Device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        default:
          $ref:  "#/components/responses/ProblemResponse"

components:
  schemas:
    Appointments:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"
        links:
          type: object
          properties:
            choices:
              type: string

    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the appointment.
          example: 980803080
        appointmentInstance:
          type: integer
          format: int64
          description: The instance of the appointment.
          example: 129304801
        isOnline:
          type: boolean
          description: Whether or not the lesson is online.
          example: true
        isOptional:
          type: boolean
          description: Whether or not following the lesson is required.
          example: false
        isStudentEnrolled:
          type: boolean
          description: Whether or not the student is enrolled.
          example: false
        isCanceled:
          type: boolean
          description: Whether or not the appointment is canceled.
          example: false
        startTimeSlotName:
          type: string
          description: The slot in which this appointment starts.
          example: "3"
        endTimeSlotName:
          type: string
          description: The slot in which this appointment ends.
          example: "4"
        subjects:
          type: array
          description: The subjects taught in the appointment.
          items:
            type: string
            example: ltc
        locations:
          type: array
          description: The locations where the appointment is at.
          items:
            type: string
            example: g026
        teachers:
          type: array
          description: The teachers present in the appointment.
          items:
            type: string
            example: asd
        capacity:
          type: integer
          description: The amount of students that can at most be present.
        availableSpace:
          type: integer
          description: How many places are still open.
        startTime:
          type: string
          format: date-time
          description: The time at which the appointment starts.
        endTime:
          type: string
          format: date-time
          description: The time at which the appointment ends.

    Student:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the student
        organizationId:
          type: string
          format: uuid
          description: The ID of the organization that the user is in.
        zermelo:
          properties:
            user:
              type: string
              description: The Zermelo user for the student.
              example: "15029"

    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The ID for the organization.
        name:
          type: string
          description: The name of the organization.
          example: "Example School"
        zermelo:
          properties:
            institution:
              type: string
              description: The Zermelo institution (used in the portal URL).
              example: "pws-timeterm"

    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        organizationId:
          type: string
          format: uuid
        status:
          $ref: "#/components/schemas/DeviceStatus"
        activatedAt:
          type: string
          format: date-time
    
    DeviceStatus:
      type: string
      enum:
      - Online
      - Offline
      - NotActivated

    DeviceAuth:
      properties:
        token:
          type: string
        links:
          properties:
            self:
              type: string
    
    DeviceList:
      properties:
        total:
          type: integer
        links:
          properties:
            nextPage:
              type: string
        devices:
          type: array
          items:
            $ref: "#/components/schemas/Device"

    Problem:
      type: object
      description: An RFC7807 Problem Details Object.
      properties:
        type:
          description: A URI reference [[RFC 3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. If empty, assumed to be "about:blank".
          type: string
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          description: The HTTP status code ([[RFC 7231](https://tools.ietf.org/html/rfc7231#section-6)], Section 6) generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.

  responses:
    ProblemResponse:
      description: An RFC 7807 Problem Details Object response.
      content:
        'application/json':
          schema:
            $ref: "#/components/schemas/Problem"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
