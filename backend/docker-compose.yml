version: '3'

services:
  postgres:
    image: postgres:13.0-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    restart: on-failure
    volumes:
      - ./docker/postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8432:8080"

  nats:
    image: synadia/jsm:nightly-20201128
    restart: always
    network_mode: host
    environment:
      NATS_CONFIG: |
        operator: /operator/OP.jwt
        resolver: URL(http://localhost:8086/jwt/v1/accounts/)

        jetstream {
          store_dir: /datastore
        }
    volumes:
      - nats-data:/datastore
    entrypoint: |
      /bin/sh -c "echo \"$$NATS_CONFIG\" > /nats.config && \
      mkdir -p /operator && \
      wget http://localhost:8086/jwt/v1/operator -O /operator/OP.jwt && \
      echo \"system_account: $$(wget -q -O - http://localhost:8086/meta/v1/systemaccount)\" >> /nats.config && \
      /nats-server -c /nats.config"
    ports:
      - "4222:4222"
  
  vault:
    image: vault
    environment:
      VAULT_CONFIG: |
        ui = true

        default_lease_ttl = "168h"
        max_lease_ttl     = "720h"

        storage "file" {
          path = "/vault/file"
        }

        listener "tcp" {
          address     = "0.0.0.0:8300"
          tls_disable = 1
        }
    entrypoint: /bin/sh -c "echo \"$$VAULT_CONFIG\" > /vault/config/config.hcl && vault server -config /vault/config/config.hcl"
    ports:
      - "8300:8300"
    cap_add:
      - IPC_LOCK

volumes:
  nats-data:

